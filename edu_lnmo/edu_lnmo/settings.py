"""
Django settings for edu_lnmo project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import base64
import os
from datetime import timedelta
from pathlib import Path

from Crypto.Cipher import AES
from Crypto.PublicKey import RSA

pg = os.environ.get('POSTGRES_NAME')
PRODUCTION = not (not pg)
DEBUG = not pg

CORS_ORIGIN_ALLOW_ALL = DEBUG

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'REDACTED'

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # Base
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Libs
    'rest_framework',
    'rest_framework_simplejwt',
    'django_filters',
    'reversion',
    'drf_yasg',
    "corsheaders",
    
    # Local
    'edu_lnmo',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
] + ([] if DEBUG else ["corsheaders.middleware.CorsMiddleware", 'django.middleware.csrf.CsrfViewMiddleware',])

ROOT_URLCONF = 'edu_lnmo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'edu_lnmo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

db_postgres_prod = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.environ.get('POSTGRES_NAME'),
    'USER': os.environ.get('POSTGRES_USER'),
    'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
    'HOST': 'postgres',
    'PORT': 5432,
}

db_postgres_dev = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': 'postgres',
    'USER': 'postgres',
    'PASSWORD': 'REDACTED',
    'HOST': '127.0.0.1',
    'PORT': 5432,
}


DATABASES = {
    'default': db_postgres_prod if PRODUCTION else db_postgres_dev
}



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        #'rest_framework.authentication.TokenAuthentication'
        'edu_lnmo.user.auth.MultiTokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'edu_lnmo.util.permissions.DenyAnyPermission',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

MEDIA_URL =  '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'edu_lnmo.User'

if DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': '{levelname} {asctime} M:{module} P:{process:d} T:{thread:d} F:{funcName:s} {filename:s}:{lineno:d} {message}',
                'style': '{',
            },
            'simple': {
                'format': '{levelname} {message}',
                'style': '{',
            },
        },
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
                'formatter': 'verbose'
            },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
                'include_html': True,
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'loggers': {
            'django.db.backends': {
                'level': 'DEBUG',
                'handlers': ['console'],
            }
        }
    }
else:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': '{levelname} {asctime} M:{module} P:{process:d} T:{thread:d} F:{funcName:s} {filename:s}:{lineno:d} {message}',
                'style': '{',
            },
            'simple': {
                'format': '{levelname} {message}',
                'style': '{',
            },
        },
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
                'formatter': 'verbose'
            },
            'mail_admins': {
                'level': 'ERROR',
                'class': 'django.utils.log.AdminEmailHandler',
                'include_html': True,
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    }

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_TRUSTED_ORIGINS = ['http://edu.lcme', 'https://edu.lnmo.ru']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'edu@lnmo.ru'
SERVER_EMAIL = 'edu@lnmo.ru'
EMAIL_HOST_PASSWORD = 'REDACTED'
EMAIL_USE_SSL = True
EMAIL_FROM = EMAIL_HOST_USER
EMAIL_JWT_SECRET = 'REDACTED'

ADMINS = [('Admin', 'sysadmin@lnmo.ru')]

PASSWORD_PUB_KEY = \
    RSA.import_key("""
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsJWfI9kjeZHgQmFEYCmN
        5vMrAYQ6peRO0p5GsbiDc2wfJyGqKqT4z2dJ+B6CwJkUsmocv2e99W8uP/gFnMTm
        GgynFvesEwgc/Y7YXG9HkJqkkKE8F2YCj4ZjMjWLhsVVqT0qxCkgYwhtSnxgp17t
        Szm114PRZJahBSCoAsLlV0NhG3KLnJhNFh7CxvUs51uIs+upSVLCq6HAMwHyAMis
        +JOFoqxyqq8KVaYj0te7aLxjE6ZCxhMQ2gv3MRPrWHBgnIosU1hnruTjEckw6QTl
        DL3TWZQ+0XwWkOaIittY0HmnOOMhzn7gRRaQNcGSneKXyW0QFHL9sYFTLPVcnCTi
        mwIDAQAB
        -----END PUBLIC KEY-----
    """.strip())

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      }
   }
}

CAPTCHA_CHALLENGE_KEY = 'REDACTED'

FILE_QUOTA_BASE = 1024*1024*100
FILE_QUOTA_PER_ROLE = {
    "staff": 1024*1024*1024*10,
    "teacher": 1024*1024*1024*1,
}
